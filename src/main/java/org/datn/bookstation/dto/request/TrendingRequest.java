package org.datn.bookstation.dto.request;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.NotBlank;

import java.math.BigDecimal;

/**
 * ðŸ”¥ TRENDING REQUEST DTO
 * Há»— trá»£ 2 loáº¡i trending: DAILY_TRENDING vÃ  HOT_DISCOUNT
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
public class TrendingRequest {
    
    /**
     * Loáº¡i trending:
     * - "DAILY_TRENDING": Xu hÆ°á»›ng theo ngÃ y (dá»±a trÃªn sales + reviews)
     * - "HOT_DISCOUNT": SÃ¡ch hot giáº£m sá»‘c (flash sale + discount cao)
     */
    @NotBlank(message = "Type khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng")
    private String type; // DAILY_TRENDING hoáº·c HOT_DISCOUNT
    
    /**
     * Pagination
     */
    @Min(value = 0, message = "Page pháº£i >= 0")
    private int page = 0;
    
    @Min(value = 1, message = "Size pháº£i >= 1")
    @Max(value = 50, message = "Size khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 50")
    private int size = 10;
    
    /**
     * Filters
     */
    private Integer categoryId;
    private BigDecimal minPrice;
    private BigDecimal maxPrice;
    
    /**
     * ðŸ”¥ HOT_DISCOUNT specific filters
     */
    private Integer minDiscountPercentage; // Giáº£m giÃ¡ tá»‘i thiá»ƒu (%)
    private Boolean flashSaleOnly = false; // Chá»‰ láº¥y flash sale
    
    /**
     * Validation methods
     */
    public boolean isDailyTrending() {
        return "DAILY_TRENDING".equals(type);
    }
    
    public boolean isHotDiscount() {
        return "HOT_DISCOUNT".equals(type);
    }
    
    public boolean isValidType() {
        return isDailyTrending() || isHotDiscount();
    }
}
